name: Plandar Client Deploy

on:
  push:
    branches: ['main', 'deploy']

jobs:
  build:
    name: Build and Push Frontend Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16

      - name: Create .env file
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env.production
          cat .env.production
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_USER_ACCESS_TOKEN}}

      - name: Docker build & push to push
        run: docker buildx build -t ${{secrets.DOCKER_IMAGE_NAME}}:${{ github.sha }} -t ${{secrets.DOCKER_IMAGE_NAME}}:latest --push .

  deploy:
    needs: build
    name: Deploy
    runs-on: [plandar-front]
    steps:
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_USER_ACCESS_TOKEN}}
      - name: Docker run
        run: |
          if [ `docker ps -f "name=plandar-front" -q` ]
          then
              docker rm -f $(docker ps -f "name=plandar-front" -q)
              docker rmi $(docker images --filter=reference="${{secrets.DOCKER_IMAGE_NAME}}" -q)
          fi
          docker pull ${{secrets.DOCKER_IMAGE_NAME}}:${{ github.sha }}
          docker run -dit --name plandar-front -p 80:80 -p 443:443 -v /home/ubuntu/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf -v /home/ubuntu/nginx/ssl:/etc/ssl ${{secrets.DOCKER_IMAGE_NAME}}:${{ github.sha }}
